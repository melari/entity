#!/usr/bin/env ruby
require 'terrun'
require 'antlr3'
require_relative 'EntityLexer.rb'
require_relative 'EntityParser.rb'

def require_directory(directory)
  base_path = File.dirname(__FILE__)
  Dir.entries(base_path + '/' + directory).each do |file|
    next if file.start_with?('.')
    full_path = "#{base_path}/#{directory}/#{file}"
    require_directory(full_path) unless File.file?(full_path)
    require_relative("#{directory}/#{file}") if File.file?(full_path)
  end
end

require_directory 'evaluators'



module Entity
  class Compiler < TerminalRunner
    name "entity"

    option "--help", 0, "", "Show this help document"
    help ""

    def self.run
      if @@options.include? "--help"
        show_usage
        exit
      end

      @@out = File.open('temp.cpp', 'w')

      input = ANTLR3::FileStream.new('example.e')
      lexer = Entity::Lexer.new(input)
      tokens = ANTLR3::CommonTokenStream.new(lexer)
      parser = Entity::Parser.new(tokens)
      eval_tree = parser.file

      add_standard_header
      eval_tree.eval

      @@out.close
    end

    def self.out(string)
      @@out.puts string unless @@out.nil?
      nil
    end

    def self.add_standard_header
      out(<<-EOS
#include <iostream>
#include <string>
using namespace std;

class Console
{
public:
  static void out(std::string& output);
};

void Console::out(std::string& output) { std::cout << output; }
      EOS
      )
    end
  end
end

if __FILE__ == $0
  x = Entity::Compiler.start(ARGV)
end
